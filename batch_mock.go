package gockle

import (
	"github.com/stretchr/testify/mock"
)

// BatchMock is an autogenerated mock type for the Batch type
type BatchMock struct {
	mock.Mock
}

// Add provides a mock function with given fields: statement, arguments
func (_m *BatchMock) Add(statement string, arguments ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, statement)
	_ca = append(_ca, arguments...)
	_m.Called(_ca...)
}

// Exec provides a mock function with given fields:
func (_m *BatchMock) Exec() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ExecTx provides a mock function with given fields:
func (_m *BatchMock) ExecTx() ([]map[string]interface{}, error) {
	ret := _m.Called()

	var r0 []map[string]interface{}
	if rf, ok := ret.Get(0).(func() []map[string]interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]map[string]interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
